<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <!-- start from command line -->
    <!-- mvn spring-boot:run -Dspring-boot.run.profiles=dev -->
    <!-- java -jar target/dietmanager.jar -Dspring.profiles.active=dev -->
    <!-- -->
    <!-- mvn clean install -Dmaven.test.skip=true -->
    <!-- mysql -u USERNAME -pPASSWORD -h HOSTNAMEORIP DATABASENAME -->
    <!-- Check by sonarcube (ref. https://github.com/SonarSource/sonar-scanning-examples/blob/master/doc/jacoco.md) -->
    <!-- mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install -->
    <!-- mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install -Pcoverage-per-test -->
    <!-- mvn clean verify sonar:sonar -Dsonar.host.url=https://sonarqube.com -Dsonar.organization=Gunnar Ronneberg -Dsonar.login=00e21528e5f07da596b49cd283f8ea61125eb2aa -->
    <!-- mvn clean verify sonar:sonar -->
    <!-- https://sonarqube.com/projects/favorite -->
    <!-- mvn sonar:sonar -Dsonar.organization=gunnarro-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=2a992b24f92b4f573993300e78bb5daa07ea50d2 -->
    <!-- jib -->
    <!-- mvn compile jib:build -P build-docker -->
    <!-- or -->
    <!-- mvn compile com.google.cloud.tools:jib-maven-plugin:3.1.4:build -Dimage=registry.hub.docker.com/gunnarro/gunnarro-web -->
    <!-- Azure -->
    <!-- az acr login -n gunnarroregistry && mvn compile jib:build -P build-docker -->
    <!-- mvn azure-webapp:deploy -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.gunnarro.web</groupId>
    <artifactId>gunnarro-web</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <name>gunnarro:as</name>
    <packaging>jar</packaging>

    <scm>
        <url>https://github.com/gunnarro/gunnarro-web</url>
        <connection>scm:git:https://github.com/gunnarro/gunnarro-web.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/gunnarro/gunnarro-web.git</developerConnection>
      <tag>HEAD</tag>
  </scm>

    <properties>
        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- latest java LTS version -->
        <java.version>11</java.version>
        <!-- spring versions -->
        <spring.boot.version>2.7.3</spring.boot.version>
        <!-- spring override library versions -->
        <log4j2.version>2.18.0</log4j2.version>
        <version.flexmark>0.62.2</version.flexmark>
        <version.jodatime>2.11.1</version.jodatime>
        <mariadb.version>2.5.3</mariadb.version>
        <!-- Web dependencies -->
       <!-- <webjars-bootstrap.version>5.1.3</webjars-bootstrap.version> -->
        <!--
        <webjars-jquery-ui.version>1.13.0</webjars-jquery-ui.version>
        <webjars-jquery.version>3.6.0</webjars-jquery.version>
        <webjars-popper.version>1.16.1</webjars-popper.version>
        -->
        <!-- maven plugins -->
        <mvn-compiler.version>3.10.1</mvn-compiler.version>
        <mvn-enforcer.version>3.0.0</mvn-enforcer.version>
        <mvn-surfire.version>3.0.0-M7</mvn-surfire.version>
        <mvn-jacoco.version>0.8.8</mvn-jacoco.version>
        <mvn-release.version>3.0.0-M5</mvn-release.version>
        <mvn-site.version>3.12.0</mvn-site.version>
        <mvn-jib-plugin.version>3.2.1</mvn-jib-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j2.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <!-- in order to use property expansion in property files -->
        <!--
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>application*.properties</include>
                </includes>
            </resource>
        </resources>
        -->
        <!-- To use the plugin goals in your POM or parent POM -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mvn-compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${mvn-enforcer.version}</version>
                <executions>
                    <execution>
                        <id>enforce-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!--
                                <banDuplicatePomDependencyVersions />
                                <dependencyConvergence>
                                    <uniqueVersions>false</uniqueVersions>
                                </dependencyConvergence>
                                -->
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>org.apache.maven</exclude>
                                        <exclude>org.apache.maven:badArtifact</exclude>
                                        <exclude>*:badArtifact</exclude>
                                    </excludes>
                                    <includes>
                                        <!--only 1.0 of badArtifact is allowed-->
                                        <include>org.apache.maven:badArtifact:1.0</include>
                                    </includes>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${mvn-surfire.version}</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <layout>JAR</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${mvn-jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>PACKAGE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.0</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.9.1.2184</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${mvn-site.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${mvn-release.version}</version>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <propertiesEncoding>UTF-8</propertiesEncoding>
                </configuration>
            </plugin>
            -->
        </plugins>
    </build>

    <dependencies>
        <!-- import from spring bom -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity5</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!-- must be excluded when deployed to azure -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.querydsl</groupId>
                    <artifactId>querydsl-apt</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-layout-template-json</artifactId>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.4.4</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- only needed when migrating to new spring major version
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-properties-migrator</artifactId>
            <scope>runtime</scope>
        </dependency>
        -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${version.jodatime}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <!-- ================= -->
        <!-- Test dependencies -->
        <!-- ================= -->
        <!-- automatically excluded for jar packaging -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>ch.vorburger.mariaDB4j</groupId>
            <artifactId>mariaDB4j-springboot</artifactId>
            <version>${mariadb.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>${mariadb.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.vorburger.mariaDB4j</groupId>
            <artifactId>mariaDB4j</artifactId>
            <version>${mariadb.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.vorburger.mariaDB4j</groupId>
            <artifactId>mariaDB4j-core</artifactId>
            <version>${mariadb.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- include junit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.7.2.0</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <!-- Optional directory to put spotbugs xdoc xml report -->
                    <xmlOutputDirectory>target/site</xmlOutputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>build-docker</id>
            <properties>
                <maven.deploy.skip>true</maven.deploy.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <!-- build and deploy docker image -->
                        <!-- mvn compile jib:build -P build-docker -->
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${mvn-jib-plugin.version}</version>
                        <configuration>
                            <!-- By default, Jib uses the distro-less java image -->
                            <from>
                                 <!-- <image>openjdk:11-jdk-slim</image> -->
                                <image>openjdk@sha256:29eca747201257182d746a59ebc96751436ccec372274c0cf22229b44ea0073c</image>
                            </from>
                            <to>
                                <!-- <image>gunnarroregistry.azurecr.io/${project.artifactId}</image> -->
                                <!-- image path at hub.docker.com, see mvn settings.xml file -->
                                <image>registry.hub.docker.com/gunnarro/gunnarro-web</image>
                                <tags>
                                    <tag>${project.version}</tag>
                                    <tag>latest</tag>
                                </tags>
                            </to>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deploy-azure</id>
            <properties>
                <web.app.name>gunnarro-web-at</web.app.name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <!-- The Maven Plugin for Azure App Service helps Java developers to deploy Maven projects to Azure App Service. -->
                        <!-- this plugin requires azure cli installed -->
                        <!-- mvn package azure-webapp:deploy -DskipTests -P deploy-azure -->
                        <groupId>com.microsoft.azure</groupId>
                        <artifactId>azure-webapp-maven-plugin</artifactId>
                        <version>2.2.0</version>
                        <configuration>
                            <subscriptionId>d21ecdd9-09c2-465d-9b87-7311465d683a</subscriptionId>
                            <resourceGroup>gunnarro-web-resource-group</resourceGroup>
                            <appName>${web.app.name}</appName>
                            <pricingTier>P1v2</pricingTier>
                            <region>westeurope</region>
                            <runtime>
                                <os>linux</os>
                                <webContainer>Java SE</webContainer>
                                <javaVersion>Java 11</javaVersion>
                            </runtime>
                            <!-- Begin of App Settings  -->
                            <appSettings>
                                <property>
                                    <name>JAVA_OPTS</name>
                                    <value>-Dserver.port=80</value>
                                </property>
                                <property>
                                    <name>JAVA_OPTS</name>
                                    <value>-Xmx512m -Xms512m</value>
                                </property>
                            </appSettings>
                            <!-- End of App Settings  -->
                            <deployment>
                                <resources>
                                    <resource>
                                        <type>jar</type>
                                        <directory>${project.basedir}/target</directory>
                                        <includes>
                                            <include>*.jar</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </deployment>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
